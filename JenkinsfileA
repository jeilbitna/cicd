pipeline {
  agent any

  environment {
    SLACK_TOKEN_ID = 'slack_token'
    CHANNEL_ID = 'notification'
  }

  stages {
    stage('Slack 메시지 전송') {
      steps {
        withCredentials([string(credentialsId: 'slack_bot_token', variable: 'SLACK_BOT_TOKEN')]) {
          script {
            def json = """{
              "channel": "${CHANNEL_ID}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*배포 승인 요청*\\nJob: ${env.JOB_NAME}, Build: #${env.BUILD_NUMBER}"
                  }
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": " 배포 승인"
                      },
                      "style": "primary",
                      "value": "deploy_approval",
                      "action_id": "deploy_trigger"
                    }
                  ]
                }
              ]
            }"""

            writeFile file: 'message.json', text: json

            sh """
              curl -X POST -H "Authorization: Bearer ${SLACK_BOT_TOKEN}" \\
                   -H 'Content-type: application/json' \\
                   --data @message.json \\
                   https://slack.com/api/chat.postMessage
            """
          }
        }
      }
    }
  }
}
